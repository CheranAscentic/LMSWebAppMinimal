// <auto-generated />
using LMSWebAppMinimal.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMSWebAppMinimal.Data.Migrations
{
    [DbContext(typeof(DataDBContext))]
    partial class DataDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMSWebAppMinimal.Domain.Base.BaseUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("LMSWebAppMinimal.Domain.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int?>("PublicationYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Books", (string)null);
                });

            modelBuilder.Entity("LMSWebAppMinimal.Domain.Model.Member", b =>
                {
                    b.HasBaseType("LMSWebAppMinimal.Domain.Base.BaseUser");

                    b.ToTable("Members", (string)null);
                });

            modelBuilder.Entity("LMSWebAppMinimal.Domain.Model.Staff", b =>
                {
                    b.HasBaseType("LMSWebAppMinimal.Domain.Base.BaseUser");

                    b.ToTable("Staffs", (string)null);
                });

            modelBuilder.Entity("LMSWebAppMinimal.Domain.Model.Book", b =>
                {
                    b.HasOne("LMSWebAppMinimal.Domain.Model.Member", null)
                        .WithMany("BorrowedBooks")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("LMSWebAppMinimal.Domain.Model.Member", b =>
                {
                    b.HasOne("LMSWebAppMinimal.Domain.Base.BaseUser", null)
                        .WithOne()
                        .HasForeignKey("LMSWebAppMinimal.Domain.Model.Member", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LMSWebAppMinimal.Domain.Model.Staff", b =>
                {
                    b.HasOne("LMSWebAppMinimal.Domain.Base.BaseUser", null)
                        .WithOne()
                        .HasForeignKey("LMSWebAppMinimal.Domain.Model.Staff", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LMSWebAppMinimal.Domain.Model.Member", b =>
                {
                    b.Navigation("BorrowedBooks");
                });
#pragma warning restore 612, 618
        }
    }
}
